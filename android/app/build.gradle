plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

def localProps = new Properties()
def localPropsFile = rootProject.file("local.properties")
if (localPropsFile.exists()) {
    localProps.load(new FileInputStream(localPropsFile))
}
def getSecret = { name ->
    return localProps.getProperty(name) ?: System.getenv(name)
}

def stringField = { name ->
    return '"' + (getSecret(name) ?: '') + '"'
}

def booleanField = { name, defaultVal ->
    def v = getSecret(name)
    return v != null ? v : defaultVal
}

android {
    compileSdkVersion 33
    namespace "com.wikiart"
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures {
        buildConfig true
    }
    defaultConfig {
        applicationId "com.wikiart"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        buildConfigField "boolean", "IS_OSS", booleanField("IS_OSS", "false")
        buildConfigField "String", "FIELD_REPORT_EMAIL", stringField("FIELD_REPORT_EMAIL")
        buildConfigField "String", "API_CLIENT_PRODUCTION", stringField("API_CLIENT_PRODUCTION")
        buildConfigField "String", "API_CLIENT_STAGING", stringField("API_CLIENT_STAGING")
        buildConfigField "String", "API_ENDPOINT_PRODUCTION", stringField("API_ENDPOINT_PRODUCTION")
        buildConfigField "String", "API_ENDPOINT_STAGING", stringField("API_ENDPOINT_STAGING")
        buildConfigField "String", "BASIC_HTTP_AUTH_USERNAME", stringField("BASIC_HTTP_AUTH_USERNAME")
        buildConfigField "String", "BASIC_HTTP_AUTH_PASSWORD", stringField("BASIC_HTTP_AUTH_PASSWORD")
        buildConfigField "String", "CANVAS_POP_ACCESS_KEY", stringField("CANVAS_POP_ACCESS_KEY")
        buildConfigField "String", "CANVAS_POP_SECRET_KEY", stringField("CANVAS_POP_SECRET_KEY")
        buildConfigField "String", "KITE_SECRET", stringField("KITE_SECRET")
        buildConfigField "String", "KITE_PUBLIC_KEY", stringField("KITE_PUBLIC_KEY")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.9.0"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'androidx.paging:paging-runtime:3.2.1'
    implementation 'io.coil-kt:coil:2.5.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation "androidx.room:room-runtime:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"
    implementation "androidx.room:room-ktx:2.6.1"
    implementation 'com.android.billingclient:billing-ktx:6.1.0'
    implementation platform('com.google.firebase:firebase-bom:33.15.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.14.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation 'androidx.paging:paging-common:3.2.1'
}
